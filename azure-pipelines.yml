pool:
  vmImage: ubuntu-latest

stages:
- stage: SAST
  jobs:
  - job: J1
    displayName: SAST
    steps:
      - task: SonarCloudPrepare@1
        displayName: Conectando a sonarcloud.io
        inputs:
          SonarCloud: 'DEVSECOPS-USACH'
          organization: 'rsanzana-devsecops-usach'
          projectKey: 'RSANZANA-DEVSECOPS-USACH_spring-boot-kubernetes'
          projectName: 'spring-boot-kubernetes'
      - task: Maven@4
        displayName: Ejecutando análisis de código
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: true
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest'
      - task: sonarcloud-buildbreaker@2
        displayName: Quiebre stage SAST
        inputs:
          SonarCloud: 'DEVSECOPS-USACH'
          organization: 'rsanzana-devsecops-usach'
- stage: SCA
  jobs:
  - job: J2
    displayName: SCA
    steps:
      - task: Maven@4
        displayName: Compilando Código fuente
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: true
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: dependency-check-build-task@6
        displayName: Ejecutando análisis de dependencias
        inputs:
          projectName: 'spring-boot-kubernetes'
          scanPath: '$(Build.SourcesDirectory)/target/*'
          format: 'ALL'
          reportsDirectory: '$(Build.SourcesDirectory)/reports'
#      - script: |
#          res=$(grep ",HIGH," $(Build.SourcesDirectory)/reports/dependency-check-report.csv | wc -l)
#          if [ $res -gt 0 ];
#          then
#            echo $res "Se encontraron vulnerabilidades de tipo HIGH"
#            exit 1;
#          fi;
- stage: Container_Security
  jobs:
    - job: J3
      displayName: Container Security
      steps:
        - task: Maven@4
          displayName: Compilando Código fuente
          inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: true
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false
        - task: DockerInstaller@0
          displayName: Instalando Docker 17.09.0-ce
          inputs:
            dockerVersion: '17.09.0-ce'
        - task: Docker@2
          displayName: Conectando a DockerHub
          inputs:
            containerRegistry: 'Docker'
            command: 'login'
        - task: Docker@2
          displayName: Ejecutando análisis de imagen con trivy
          inputs:
            containerRegistry: 'Docker'
            repository: 'rsanzana/spring-boot-kubernetes'
            command: 'build'
            Dockerfile: '**/Dockerfile'
            tags: 'latest'
        - script: |
            sudo apt-get install -y rpm
            wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
            sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
            trivy image rsanzana/spring-boot-kubernetes:latest
            trivy image --exit-code 1 --severity HIGH,CRITICAL rsanzana/spring-boot-kubernetes:latest
            echo "Se encontraron vulnerabilidades de tipo HIGH"
        - task: Docker@2
          displayName: Subiendo imagen a DockerHub
          inputs:
            repository: 'rsanzana/spring-boot-kubernetes'
            command: 'push'
            containerRegistry: 'Docker'
            tags: 'latest'
